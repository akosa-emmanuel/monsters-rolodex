{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","React","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","Component","constructor","super","this","e","setState","searchField","target","value","state","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"mRAIO,MAAMA,EAAQC,GACjBC,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BN,EAAMO,QAAQC,GAAE,4BAChEP,IAAAC,cAAA,UAAKF,EAAMO,QAAQE,MACnBR,IAAAC,cAAA,SAAIF,EAAMO,QAAQG,cCJnB,MAAMC,EAAWX,GACpBC,IAAAC,cAAA,OAAKC,UAAY,aACZH,EAAMY,SAASC,IAAIN,GAChBN,IAAAC,cAACH,EAAI,CAACe,IAAOP,EAAQC,GAAID,QAASA,YCJvC,MAAMQ,EAAYC,IAAA,IAACC,YAACA,EAAWC,aAAEA,GAAaF,EAAA,OACjDf,IAAAC,cAAA,SAAOiB,KAAK,SACRhB,UAAU,SACVc,YAAaA,EACbG,SAAYF,WCsCLG,MAxCf,cAAkBC,YAChBC,cACEC,QAAQC,KAcVP,aAAeQ,KACbD,KAAKE,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,UAbvCL,KAAKM,MAAQ,CACXnB,SAAW,GACXgB,YAAc,IAIlBI,oBACEC,MAAM,8CACLC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAASZ,KAAKE,SAAS,CAAEf,SAAWyB,KAO1CC,SAEE,MAAM1B,SAAEA,EAAQgB,YAAEA,GAAeH,KAAKM,MAChCQ,EAAmB3B,EAAS4B,OAAOjC,GACvCA,EAAQE,KAAKgC,cAAcC,SAASd,EAAYa,gBAGlD,OACExC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAACa,EAAS,CACRE,YAAa,iBACbC,aAAcO,KAAKP,eAErBjB,IAAAC,cAACS,EAAQ,CAACC,SAAY2B,OC3BjBI,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAApB,EAAA,GAAAQ,KAAAY,EAAAC,KAAA,UAAqBb,KAAKlB,IAAiD,IAAhDgC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASpC,EACpEgC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDlB,OACHrC,IAAAC,cAACD,IAAMwD,WAAU,KACfxD,IAAAC,cAACmB,EAAG,QAORsB","file":"static/js/main.24e4e5be.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props =>(\r\n    <div className = \"card-list\">\r\n        {props.monsters.map(monster => (\r\n            <Card key = {monster.id} monster={monster} />\r\n        ) )}\r\n    </div>\r\n);\r\n","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input type='search'\r\n        className=\"search\" \r\n        placeholder={placeholder} \r\n        onChange  ={handleChange}\r\n    />\r\n)\r\n","import React, { Component }  from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters : users }) )\n  }\n\n  handleChange = e =>{\n    this.setState({ searchField : e.target.value })\n  }\n\n    render(){\n      \n      const { monsters, searchField} = this.state;\n      const filteredMonsters = monsters.filter(monster =>\n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n\n      return (\n        <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n          <SearchBox \n            placeholder= 'search monster' \n            handleChange={this.handleChange} \n          />\n          <CardList monsters = {filteredMonsters} />\n        </div>\n      );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}